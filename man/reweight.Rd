% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reweight.r
\name{reweight}
\alias{reweight}
\title{Reweight a microdata file.}
\usage{
reweight(
  iweights,
  targets,
  target_names,
  tol,
  xmat,
  xlb = 0,
  xub = 50,
  maxiter = 50,
  optlist = NULL
)
}
\arguments{
\item{iweights}{Numeric vector of initial household weights, length h.}

\item{targets}{Numeric vector of desired target values, length k.}

\item{target_names}{Character vector of names for targets, length k.}

\item{tol}{Numeric vector of additive tolerances for targets, length k. The
solver will seek to hit the targets, plus or minus tol.}

\item{xmat}{Matrix of data for households, dimension h x k.}

\item{xlb}{Numeric vector of lower bounds for the ratio of new weights to
initial weights. Default is 0.}

\item{xub}{Numeric vector of upper bounds for the ration of new weights to
initial weights. Default is 50.}

\item{maxiter}{Integer value for maximum number of iterations. Default is 50.}

\item{optlist}{Named list of allowable
\href{https://coin-or.github.io/Ipopt/OPTIONS.html}{IPOPT options}.}
}
\value{
A list with the following elements:

\describe{ \item{solver_message}{The message produced by IPOPT. See
\href{https://coin-or.github.io/Ipopt/OUTPUT.html}{IPOPT output}.}
\item{etime}{Elapsed time.} \item{objective}{The objective function value at
the solution.} \item{weights}{Numeric vector of new weights.}
\item{targets_df}{Data frame with target names and values, values at the
starting point, values at the solution, tolerances, differences, and percent
differences. The suffix diff indicates the difference from a target and the
suffix pdiff indicates the percent difference from a target.}
\item{result}{List with output from the solver that was used.}}
}
\description{
Calculate new weights for each household in a microdata file
so that (1) selected variables, weighted with the new weights and summed, hit
or come close to desired targets, and (2) a measure of distortion based on
how much the new weights are changed from an initial set of weights is
minimized.
}
\details{
\code{reweight} uses the \href{https://coin-or.github.io/Ipopt/}{IPOPT
solver} in the package \code{\link[ipoptr]{ipoptr}}. The problem is set up as
a nonlinear program with constraints. The constraints are the desired
targets. The user can set tolerances around these targets in which case they
are inequality constraints. By default the distortion measure to be minimized
is the sum of squared differences between the ratio of new weights to
the initial weight and 1. The user can provide alternative distortion measures.
}
\examples{
# Example 1: Determine new weights for a simple problem with random data
p <- make_problem(h=30, s=1, k=4)
# we'll have 30 households (30 weights) and 4 targets

# break out needed components and prepare them for reweight
iweights <- p$wh

targets <- as.vector(p$targets)
target_names <- paste0("targ", 1:length(targets))
# the targets created by make_problem are hit exactly when using the initial
# weights so perturb them slightly so that we have to find new weights
set.seed(1234)
noise <- rnorm(n=length(targets), mean = 0, sd = .02)
targets <- targets * (1 + noise)

tol <- .005 * abs(targets)
xmat <- p$xmat
colnames(xmat) <- target_names

res <- reweight(iweights = iweights, targets = targets,
                target_names = target_names, tol = tol,
                xmat = xmat)

res
}
